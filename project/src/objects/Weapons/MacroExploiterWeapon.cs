using Godot;
using System;
using Godot.Collections;

using Game.Utils;

namespace Game
{
    public class MacroExploiterWeapon : Weapon
    {
        private ObjectPlacer _objectPlacer = null;

        public MacroExploiterWeapon()
        {
            OneShot = true;
        }

        public override void _Ready()
        {
            
        }
        public override void _EnterTree()
        {
            _objectPlacer = Global.Instance.GetPlayer().FindObjectPlacer();
            if (_objectPlacer != null)
            {
                _objectPlacer.PlaceAbilityCheckEvent += PlaceAbilityCheck;
            }
        }
        public override void _ExitTree()
        {
            if (_objectPlacer != null)
            {
                _objectPlacer.PlaceAbilityCheckEvent -= PlaceAbilityCheck;
            }
        }

        public override void MakeShot(bool primary)
        {
            if (primary)
            {

            }
        }

        public void TryToAttachToModule()
        {
            Dictionary collision = Global.Instance.GetPlayer().GetCamera().CastRay(
                Global.Instance.GetPlayer().UseDistance);
            if (collision.Count > 0)
            {
                Spatial collider = collision.Get<Spatial>("collider");
                if(collider is XModule)
                {
                    XModule module = (XModule)collider;
                    //AttachToModule(module);
                    // when it placed, MacroExploiterItem will add xmodule to a console library
                }
            }
        }
        private void AttachToModule(XModule module, Transform globalTransform)
        {

        }

        public bool PlaceAbilityCheck(Spatial place) {
            return (place is XModule);
        }
    }
}

